package test.daogen.myibatis.dao;

import com.ibatis.sqlmap.client.SqlMapClient;
import java.sql.SQLException;
import java.util.List;
import test.daogen.myibatis.model.TestTable;
import test.daogen.myibatis.model.TestTableExample;

public class TestTableDAOImpl implements TestTableDAO {
    /**
     * This field was generated by Abator for iBATIS.
     * This field corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    private SqlMapClient sqlMapClient;

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public TestTableDAOImpl(SqlMapClient sqlMapClient) {
        super();
        this.sqlMapClient = sqlMapClient;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public void insert(TestTable record) throws SQLException {
        sqlMapClient.insert("test_table.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public List selectByExample(TestTableExample example) throws SQLException {
        List list = sqlMapClient.queryForList("test_table.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public int deleteByExample(TestTableExample example) throws SQLException {
        int rows = sqlMapClient.delete("test_table.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public int countByExample(TestTableExample example) throws SQLException {
        Integer count = (Integer)  sqlMapClient.queryForObject("test_table.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public int updateByExampleSelective(TestTable record, TestTableExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("test_table.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    public int updateByExample(TestTable record, TestTableExample example) throws SQLException {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = sqlMapClient.update("test_table.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table test_table
     *
     * @abatorgenerated Wed May 18 14:47:29 CEST 2011
     */
    private static class UpdateByExampleParms extends TestTableExample {
        private Object record;

        public UpdateByExampleParms(Object record, TestTableExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}